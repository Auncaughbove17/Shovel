{"version":3,"sources":["components/A.tsx","components/Header.tsx","components/Footer.tsx","components/CopyCode.tsx","components/Search/SearchResult.tsx","contexts/ManifestsContext.tsx","components/Search/Search.tsx","components/Search/index.ts","components/Main.tsx","components/Manifest.tsx","App.tsx","serviceWorker.js","index.js"],"names":["A","props","isExternal","color","children","Header","pt","pb","pl","pr","bg","size","to","href","Footer","version","CopyCode","toast","useToast","a","navigator","clipboard","writeText","code","status","title","description","duration","variant","onClick","as","Clipboard","SearchResult","bucketURL","manifest","manifestURL","replace","borderWidth","shadow","rounded","p","bucket","name","homepage","LinkIcon","FileText","checkver","github","GitMerge","hidden","ManifestsContext","createContext","Consumer","ManifestsProvider","useState","manifests","setManifests","fetch","response","json","useEffect","getManifests","Provider","value","fuseOptions","threshold","keys","Search","query","URLSearchParams","useLocation","search","history","useHistory","useContext","get","setSearch","results","setResults","Fuse","fuse","setFuse","timer","useRef","stopWatch","input","doSearch","current","performance","now","length","focus","clearTimeout","timeout","Math","max","setTimeout","stopWatchResult","toFixed","onChange","event","currentTarget","placeholder","boxSizing","background","ref","spacing","map","result","item","refIndex","Main","Manifest","find","App","className","path","render","match","params","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be8a9712.chunk.js","sourcesContent":["import { Link, LinkProps } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * External links. Use `Link` from react-router for internal links instead.\r\n */\r\nfunction A(props: LinkProps) {\r\n  return (\r\n    <Link isExternal color=\"blue.600\" {...props}>\r\n      {props.children}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default A;\r\n","import React from \"react\";\r\nimport A from \"./A\";\r\nimport { Heading, Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Header for any page\r\n */\r\nfunction Header(props: React.ComponentPropsWithRef<\"header\">) {\r\n  return (\r\n    <header {...props}>\r\n      <Box pt=\"1rem\" pb=\"1rem\" pl=\"20vw\" pr=\"20vw\" bg=\"gray.100\">\r\n        <Heading size=\"xl\">\r\n          <Link to=\"/\">Shovel</Link>\r\n        </Heading>\r\n        <Heading size=\"sm\">\r\n          Search apps installable via <A href=\"https://scoop.sh\">scoop</A>\r\n        </Heading>\r\n        {props.children}\r\n      </Box>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport A from \"./A\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { version } from \"../../package.json\";\r\n\r\n/**\r\n * Footer for any page\r\n */\r\nfunction Footer(props: React.ComponentPropsWithRef<\"footer\">) {\r\n  return (\r\n    <footer {...props}>\r\n      <Box pt=\"2rem\" pb=\"2rem\" pl=\"20vw\" pr=\"20vw\" bg=\"white\">\r\n        Shovel v{version} is{\" \"}\r\n        <A href=\"https://github.com/mertd/shovel\">open source</A>. Your use of\r\n        this app is governed by the{\" \"}\r\n        <A href=\"https://github.com/mertd/shovel/blob/master/LICENCE\">\r\n          MIT Licence\r\n        </A>\r\n        .{props.children}\r\n      </Box>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Code, useToast, Button, Icon } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Clipboard } from \"react-feather\";\r\n\r\ninterface CopyCodeProps extends React.ComponentPropsWithRef<\"div\"> {\r\n  code: string;\r\n}\r\n\r\n/**\r\n * Display a line of code together with a button that allows for easy copying.\r\n */\r\nexport default function CopyCode(props: CopyCodeProps) {\r\n  const toast = useToast();\r\n\r\n  async function toClipboard() {\r\n    try {\r\n      await navigator.clipboard.writeText(props.code);\r\n      toast({\r\n        status: \"success\",\r\n        title: \"Copied\",\r\n        description: \"You can paste the command into your terminal now ðŸ“‹\",\r\n        duration: 3000,\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        status: \"error\",\r\n        title: \"Error\",\r\n        description: \"Copying to clipboard is not supported in your browser ðŸ“µ\",\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div {...props}>\r\n      <Code>{props.code}</Code>{\" \"}\r\n      <Button\r\n        size=\"xs\"\r\n        variant=\"outline\"\r\n        onClick={toClipboard}\r\n        aria-label=\"copy\"\r\n      >\r\n        <Icon as={Clipboard} />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  VStack,\r\n  Tag,\r\n  Divider,\r\n  Heading,\r\n  Icon,\r\n  Text,\r\n  BoxProps,\r\n} from \"@chakra-ui/react\";\r\nimport A from \"../A\";\r\nimport CopyCode from \"../CopyCode\";\r\nimport Manifest from \"../../types/Manifest\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FileText, GitMerge, Link as LinkIcon } from \"react-feather\";\r\n\r\ninterface SearchResultProps extends BoxProps {\r\n  manifest: Manifest;\r\n}\r\n\r\n/**\r\n * Displays information for a single manifest\r\n */\r\nfunction SearchResult(props: SearchResultProps) {\r\n  const bucketURL = props.manifest.manifestURL.replace(/^(https:\\/\\/github\\.com\\/.*?\\/.*?)\\/.*$/gm,'$1'); \r\n  return (\r\n    <VStack\r\n      borderWidth=\"1px\"\r\n      bg=\"white\"\r\n      shadow=\"md\"\r\n      rounded=\"md\"\r\n      p=\"1em\"\r\n      {...props}\r\n    >\r\n      <Heading size=\"sm\">\r\n        <Link\r\n          to={`/bucket/${props.manifest.bucket}/manifest/${props.manifest.name}`}\r\n        >\r\n          {props.manifest.name}\r\n        </Link>{\" \"}\r\n        <A href={props.manifest.homepage} title=\"Homepage\">\r\n          <Icon as={LinkIcon} />\r\n        </A>{\" \"}\r\n        <A href={props.manifest.manifestURL} title=\"Manifest\">\r\n          <Icon as={FileText} />\r\n        </A>{\" \"}\r\n        {props.manifest.checkver?.github && (\r\n          <A href={props.manifest.checkver.github} title=\"Source Code\">\r\n            <Icon as={GitMerge} />\r\n          </A>\r\n        )}\r\n      </Heading>\r\n      <Divider />\r\n      <div>\r\n        <Tag>{props.manifest.version}</Tag> <Tag>{props.manifest.bucket}</Tag>\r\n      </div>\r\n      <Text>{props.manifest.description}</Text>\r\n      <p hidden={props.manifest.bucket === \"main\"}>\r\n        <CopyCode code={`scoop bucket add ${props.manifest.bucket} \"${bucketURL}\"`} />\r\n      </p>\r\n      <p>\r\n        <CopyCode code={`scoop install ${props.manifest.bucket}/${props.manifest.name}`} />\r\n      </p>\r\n      {props.children}\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport Manifest from \"../types/Manifest\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\nconst ManifestsContext = createContext<Manifest[]>([]);\r\nexport const ManifestsConsumer = ManifestsContext.Consumer;\r\n\r\nexport function ManifestsProvider(props: React.ComponentPropsWithRef<any>) {\r\n  const [manifests, setManifests] = useState<Manifest[]>([]);\r\n  const toast = useToast();\r\n\r\n  async function getManifests() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://auncaughbove17.github.io/shovel-data/manifests.json\"\r\n      );\r\n      const json = await response.json();\r\n      setManifests(json as Manifest[]);\r\n    } catch (error) {\r\n      toast({\r\n        status: \"error\",\r\n        title: \"Error\",\r\n        description: \"Couldn't fetch or parse manifests â›”\",\r\n        duration: null, // don't hide as this error will render the app unusable\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getManifests();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <ManifestsContext.Provider value={manifests} {...props}>\r\n      {props.children}\r\n    </ManifestsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ManifestsContext;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\nimport { Spinner, Input, Stack, Box, Text } from \"@chakra-ui/react\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Manifest from \"../../types/Manifest\";\r\nimport ManifestsContext from \"../../contexts/ManifestsContext\";\r\n\r\nconst fuseOptions = {\r\n  threshold: 0.2,\r\n  keys: [\"name\", \"description\"],\r\n};\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\n/**\r\n * Renders a search input and responds to interaction with it by updating the url, executing the manifest search and displaying the results.\r\n */\r\nfunction Search(props: React.ComponentPropsWithRef<\"div\">) {\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const manifests = useContext(ManifestsContext);\r\n  const [search, setSearch] = useState(query.get(\"q\") || \"\");\r\n  const [results, setResults] = useState<Fuse.FuseResult<Manifest>[] | null>(\r\n    null\r\n  );\r\n  const [fuse, setFuse] = useState(new Fuse(manifests, fuseOptions));\r\n\r\n  const timer = useRef<NodeJS.Timeout | null>(null);\r\n  const stopWatch = useRef([0, 0]);\r\n  const input = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (manifests.length > 0) {\r\n      setFuse(new Fuse(manifests, fuseOptions));\r\n      input?.current?.focus();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [manifests]);\r\n\r\n  useEffect(() => {\r\n    // trigger search when fuse is initialized\r\n    if (search) {\r\n      doSearch();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [fuse]);\r\n\r\n  function doSearch() {\r\n    stopWatch.current[0] = performance.now();\r\n    const results = fuse.search<Manifest>(search);\r\n    stopWatch.current[1] = performance.now();\r\n    setResults(results);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // skip search if there is no change, reset if there is no input\r\n    if (search === query.get(\"q\")) return;\r\n    if (!search) return setResults(null);\r\n    // set query parameter\r\n    history.replace(\"/search?q=\" + search);\r\n    // use timeout to avoid unnecessary intermediate searches\r\n    timer.current && clearTimeout(timer.current);\r\n    const timeout = Math.max(2000 / search.length, 500);\r\n    timer.current = setTimeout(doSearch, timeout);\r\n    // eslint-disable-next-line\r\n  }, [search]);\r\n\r\n  if (!manifests.length) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const stopWatchResult = (stopWatch.current[1] - stopWatch.current[0]).toFixed(\r\n    0\r\n  );\r\n\r\n  return (\r\n    <div {...props}>\r\n      <Box>\r\n        <Input\r\n          value={search}\r\n          onChange={(event: React.FormEvent<HTMLInputElement>) =>\r\n            setSearch(event.currentTarget.value)\r\n          }\r\n          placeholder=\"Search\"\r\n          boxSizing=\"border-box\"\r\n          background=\"white\"\r\n          ref={input}\r\n        />\r\n        {results && (\r\n          <Text as=\"sub\">\r\n            Searched <b>{manifests.length}</b> manifests in{\" \"}\r\n            <b>{stopWatchResult}</b>ms and found <b>{results.length}</b> result\r\n            {results.length === 1 || \"s\"}.\r\n          </Text>\r\n        )}\r\n        <Stack spacing=\"1rem\" pt=\"1rem\" pb=\"1rem\">\r\n          {results?.map((result) => (\r\n            <SearchResult key={result.refIndex} manifest={result.item} />\r\n          ))}\r\n        </Stack>\r\n        {props.children}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import Search from \"./Search\";\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\n/**\r\n * Container for search components\r\n */\r\nfunction Main(props: React.ComponentPropsWithRef<\"main\">) {\r\n  return (\r\n    <main {...props}>\r\n      <Box pt=\"1rem\" pb=\"1rem\" pl=\"20vw\" pr=\"20vw\" bg=\"gray.100\">\r\n        <Search />\r\n        {props.children}\r\n      </Box>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useContext } from \"react\";\r\nimport ManifestsContext from \"../contexts/ManifestsContext\";\r\nimport SearchResult from \"./Search/SearchResult\";\r\n\r\ninterface ManifestProps extends React.ComponentPropsWithRef<\"div\"> {\r\n  bucket: string;\r\n  name: string;\r\n}\r\n\r\nexport default function Manifest(props: ManifestProps) {\r\n  const manifests = useContext(ManifestsContext);\r\n  const manifest = manifests.find(\r\n    (manifest) =>\r\n      manifest.name === props.name && manifest.bucket === props.bucket\r\n  );\r\n\r\n  if (manifest) return <SearchResult manifest={manifest} {...props} />;\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Main from \"./components/Main\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { ManifestsProvider } from \"./contexts/ManifestsContext\";\r\nimport Manifest from \"./components/Manifest\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ChakraProvider>\r\n        <ManifestsProvider>\r\n          <Router>\r\n            <Header />\r\n            <Switch>\r\n              <Route path=\"/search\">\r\n                <Main />\r\n              </Route>\r\n              <Route\r\n                path=\"/bucket/:bucket/manifest/:name\"\r\n                render={(props) => (\r\n                  <Manifest\r\n                    name={props.match.params.name}\r\n                    bucket={props.match.params.bucket}\r\n                  />\r\n                )}\r\n              />\r\n              <Route path=\"*\">\r\n                <Redirect to=\"/search\" />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n          <Footer />\r\n        </ManifestsProvider>\r\n      </ChakraProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}